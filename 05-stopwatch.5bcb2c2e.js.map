{"mappings":"YAAA,IAAMA,EAAoB,IACpBC,EAAUC,SAASC,cAAc,YACjCC,EAAaF,SAASC,cAAc,uBACpCE,EAAWH,SAASC,cAAc,aAClCG,EAAcJ,SAASC,cAAc,wBACrCI,EAAcL,SAASC,cAAc,wBACrCK,EAAYN,SAASC,cAAc,kBACnCM,EAAaP,SAASC,cAAc,mBAGtCO,GAFeR,SAASC,cAAc,mBAEzB,MACbQ,EAAsB,EACpBC,EAAe,GACfC,EAAgB,GAGhBC,EAAQ,WACRJ,IACFK,cAAcL,GACdA,EAAa,K,EAgCXM,EAAkB,SAAAC,G,OACrBf,SAASC,cAAc,cAAce,UAAYD,C,EAEpDhB,EAAQkB,iBAAiB,SAAS,SAAAC,GAChCZ,EAAUa,OACVP,G,IAGFT,EAASc,iBAAiB,SAAS,SAAAC,GApCrB,IACNE,EAoCNF,EAAEG,cAAcC,UAAUC,OAAO,UACjChB,EAAWiB,OAASjB,EAAWY,OAASZ,EAAWkB,QAC/CjB,EACFI,KAvCIQ,EAAc,IAAIM,KAAKA,KAAKC,MAAQlB,GAC1CD,EAAaoB,aAAY,WACvB,IAAMC,EAAQ,IAAIH,KAASN,EAE3BX,EAAsBoB,EACtB,IAAMC,EAAeC,KAAKC,MAAMH,EAAQ/B,GAClCmC,EAAUF,KAAKC,MAAMH,EAAS/B,EAAqBY,GACnDwB,EAAUH,KAAKC,MACnBH,EAAU,IAAqClB,GAE3CwB,EAAQJ,KAAKC,MACjBH,EAAU,KArBG,IAuBTO,EAAOL,KAAKC,MAChBH,EAAS,OAGLQ,EAAYC,OAAOL,GAASM,SAAS,EAAG,KACxCC,EAAYF,OAAOJ,GAASK,SAAS,EAAG,KACxCE,EAAUH,OAAOH,GAAOI,SAAS,EAAG,KAEpCG,EAAoB,GAAgBC,OAAbP,EAAK,UAAqBO,OAAbF,EAAQ,OAAoBE,OAAfH,EAAU,OAAoBG,OAAfN,EAAU,OAAkBM,OAAbb,GAErFhB,EAAgB4B,E,GACf,G,IAuBL,IAMME,EAAkB,SAAA7B,G,OACrBf,SAASC,cAAc,mBAAmBe,UAAYD,C,EA8BzDX,EAAYa,iBAAiB,SAAS,SAAAC,GA5BxB,IACNE,EA4BNF,EAAEG,cAAcC,UAAUC,OAAO,UACjChB,EAAWiB,OAASjB,EAAWY,OAASZ,EAAWkB,QAC/CjB,EACFI,KA/BIQ,EAAc,IAAIM,KAAKA,KAAKC,MAAQlB,GAC1CD,EAAaoB,aAAY,WACvB,IAAMC,EAAQ,IAAIH,KAASN,EAE3BX,EAAsBoB,EACtB,IAAMC,EAAeC,KAAKC,MAAMH,EAAQ/B,GAClCmC,EAAUF,KAAKC,MAAMH,EAAS/B,EAAqBY,GACnDwB,EAAUH,KAAKC,MACnBH,EAAU,IAAqClB,GAE3CwB,EAAQJ,KAAKC,MACjBH,EAAU,KA9EG,IAgFTO,EAAOL,KAAKC,MAChBH,EAAS,OAGLQ,EAAYC,OAAOL,GAASM,SAAS,EAAG,KACxCC,EAAYF,OAAOJ,GAASK,SAAS,EAAG,KACxCE,EAAUH,OAAOH,GAAOI,SAAS,EAAG,KAEpCG,EAAoB,GAAgBC,OAAbP,EAAK,UAAqBO,OAAbF,EAAQ,OAAoBE,OAAfH,EAAU,OAAoBG,OAAfN,EAAU,OAAkBM,OAAbb,GAErFc,EAAgBF,E,GACf,G,IAaLrC,EAAYY,iBAAiB,SAAS,SAAAC,GACpCN,G,IAGFV,EAAWe,iBAAiB,SAAS,SAAAC,GACnCZ,EAAUa,OACVP,IACAH,EAAsB,EACtBmC,EAAgB,4B","sources":["src/app/05-stopwatch.js"],"sourcesContent":["const millisecondsInSec = 1000;\nconst stopBtn = document.querySelector('.js-stop');\nconst stopButton = document.querySelector('.js-stop__stopwatch');\nconst startBtn = document.querySelector('.js-start');\nconst startButton = document.querySelector('.js-start__stopwatch');\nconst pauseButton = document.querySelector('.js-pause__stopwatch');\nconst stopAudio = document.querySelector('.js-audio-stop');\nconst startAudio = document.querySelector('.js-audio-start');\nconst pauseAudio = document.querySelector('.js-audio-pause');\n\nlet intervalId = null;\nlet elapsedMilliseconds = 0;\nconst secondsInMin = 60;\nconst minutesInHour = 60;\nconst hoursInDay = 24;\n\nconst pause = () => {\n  if (intervalId) {\n    clearInterval(intervalId);\n    intervalId = null;\n  }\n};\n\nconst start = () => {\n  const initialDate = new Date(Date.now() - elapsedMilliseconds);\n  intervalId = setInterval(() => {\n    const delta = new Date() - initialDate;\n\n    elapsedMilliseconds = delta;\n    const milliseconds = Math.floor(delta % millisecondsInSec);\n    const seconds = Math.floor((delta / millisecondsInSec) % secondsInMin);\n    const minutes = Math.floor(\n      (delta / (millisecondsInSec * secondsInMin)) % minutesInHour\n    );\n    const hours = Math.floor(\n      (delta / (millisecondsInSec * secondsInMin * minutesInHour)) % hoursInDay\n    );\n    const days = Math.floor(\n      delta / (millisecondsInSec * secondsInMin * minutesInHour * hoursInDay)\n    );\n\n    const UISeconds = String(seconds).padStart(2, '0');\n    const UIMinutes = String(minutes).padStart(2, '0');\n    const UIHours = String(hours).padStart(2, '0');\n\n    const stopwatcherFormat = `${days} days ${UIHours} : ${UIMinutes} : ${UISeconds} : ${milliseconds}`;\n\n    renderStopWatch(stopwatcherFormat);\n  }, 0);\n};\n\nconst renderStopWatch = str =>\n  (document.querySelector('.stopwatch').innerText = str);\n\nstopBtn.addEventListener('click', e => {\n  stopAudio.play();\n  pause();\n});\n\nstartBtn.addEventListener('click', e => {\n  e.currentTarget.classList.toggle('paused');\n  startAudio.paused ? startAudio.play() : startAudio.pause();\n  if (intervalId) {\n    pause();\n  } else {\n    start();\n  }\n});\n\n// ------- next variant with 3 buttons ------------------------\n\nconst interrupt = () => {\n  pause();\n  elapsedMilliseconds = 0;\n  renderStopWatch('0 days 00:00:00:000');\n};\n\nconst renderStopwatch = str =>\n  (document.querySelector('.stopwatch-next').innerText = str);\n\nconst begin = () => {\n  const initialDate = new Date(Date.now() - elapsedMilliseconds);\n  intervalId = setInterval(() => {\n    const delta = new Date() - initialDate;\n\n    elapsedMilliseconds = delta;\n    const milliseconds = Math.floor(delta % millisecondsInSec);\n    const seconds = Math.floor((delta / millisecondsInSec) % secondsInMin);\n    const minutes = Math.floor(\n      (delta / (millisecondsInSec * secondsInMin)) % minutesInHour\n    );\n    const hours = Math.floor(\n      (delta / (millisecondsInSec * secondsInMin * minutesInHour)) % hoursInDay\n    );\n    const days = Math.floor(\n      delta / (millisecondsInSec * secondsInMin * minutesInHour * hoursInDay)\n    );\n\n    const UISeconds = String(seconds).padStart(2, '0');\n    const UIMinutes = String(minutes).padStart(2, '0');\n    const UIHours = String(hours).padStart(2, '0');\n\n    const stopwatcherFormat = `${days} days ${UIHours} : ${UIMinutes} : ${UISeconds} : ${milliseconds}`;\n\n    renderStopwatch(stopwatcherFormat);\n  }, 0);\n};\n\nstartButton.addEventListener('click', e => {\n  e.currentTarget.classList.toggle('paused');\n  startAudio.paused ? startAudio.play() : startAudio.pause();\n  if (intervalId) {\n    pause();\n  } else {\n    begin();\n  }\n});\n\npauseButton.addEventListener('click', e => {\n  pause();\n});\n\nstopButton.addEventListener('click', e => {\n  stopAudio.play();\n  pause();\n  elapsedMilliseconds = 0;\n  renderStopwatch('0 days 00 : 00 : 00 : 000');\n});\n"],"names":["$a240c3278a262ce0$var$millisecondsInSec","$a240c3278a262ce0$var$stopBtn","document","querySelector","$a240c3278a262ce0$var$stopButton","$a240c3278a262ce0$var$startBtn","$a240c3278a262ce0$var$startButton","$a240c3278a262ce0$var$pauseButton","$a240c3278a262ce0$var$stopAudio","$a240c3278a262ce0$var$startAudio","$a240c3278a262ce0$var$intervalId","$a240c3278a262ce0$var$elapsedMilliseconds","$a240c3278a262ce0$var$secondsInMin","$a240c3278a262ce0$var$minutesInHour","$a240c3278a262ce0$var$pause","clearInterval","$a240c3278a262ce0$var$renderStopWatch","str","innerText","addEventListener","e","play","initialDate","currentTarget","classList","toggle","paused","pause","Date","now","setInterval","delta","milliseconds","Math","floor","seconds","minutes","hours","days","UISeconds","String","padStart","UIMinutes","UIHours","stopwatcherFormat","concat","$a240c3278a262ce0$var$renderStopwatch"],"version":3,"file":"05-stopwatch.5bcb2c2e.js.map"}